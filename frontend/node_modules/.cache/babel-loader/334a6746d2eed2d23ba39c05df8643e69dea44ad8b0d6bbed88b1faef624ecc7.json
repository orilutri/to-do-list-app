{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oriana_Lutricuso\\\\Desktop\\\\to-do-list-app\\\\frontend\\\\src\\\\components\\\\TaskForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  addTask,\n  onUpdate,\n  taskToEdit\n}) => {\n  _s();\n  var _taskToEdit$title, _taskToEdit$descripti, _taskToEdit$priority, _taskToEdit$status;\n  const [title, setTitle] = useState((_taskToEdit$title = taskToEdit === null || taskToEdit === void 0 ? void 0 : taskToEdit.title) !== null && _taskToEdit$title !== void 0 ? _taskToEdit$title : '');\n  const [description, setDescription] = useState((_taskToEdit$descripti = taskToEdit === null || taskToEdit === void 0 ? void 0 : taskToEdit.description) !== null && _taskToEdit$descripti !== void 0 ? _taskToEdit$descripti : '');\n  const [dueDate, setDueDate] = useState(taskToEdit ? new Date(taskToEdit.dueDate).toISOString().split('T')[0] : '');\n  const [priority, setPriority] = useState((_taskToEdit$priority = taskToEdit === null || taskToEdit === void 0 ? void 0 : taskToEdit.priority) !== null && _taskToEdit$priority !== void 0 ? _taskToEdit$priority : 'medium');\n  const [status, setStatus] = useState((_taskToEdit$status = taskToEdit === null || taskToEdit === void 0 ? void 0 : taskToEdit.status) !== null && _taskToEdit$status !== void 0 ? _taskToEdit$status : 'pending');\n  const handleSubmit = async e => {\n    var _taskToEdit$id;\n    e.preventDefault();\n    const updatedTask = {\n      id: (_taskToEdit$id = taskToEdit === null || taskToEdit === void 0 ? void 0 : taskToEdit.id) !== null && _taskToEdit$id !== void 0 ? _taskToEdit$id : crypto.randomUUID(),\n      title,\n      description,\n      dueDate: new Date(dueDate),\n      priority: priority,\n      status: status\n    };\n    if (taskToEdit) {\n      onUpdate(updatedTask);\n    } else {\n      await addTask(updatedTask);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: taskToEdit ? 'Editar tarea' : 'Nueva tarea'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"T\\xEDtulo\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Descripci\\xF3n\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: dueDate,\n      onChange: e => setDueDate(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: priority,\n      onChange: e => setPriority(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"low\",\n        children: \"Baja\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"medium\",\n        children: \"Media\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"high\",\n        children: \"Alta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: status,\n      onChange: e => setStatus(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"pending\",\n        children: \"Pendiente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"completed\",\n        children: \"Completada\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: taskToEdit ? 'Guardar cambios' : 'Agregar tarea'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"t5GwJbckGtbyucz5B6YF3qZ9kMM=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskForm","addTask","onUpdate","taskToEdit","_s","_taskToEdit$title","_taskToEdit$descripti","_taskToEdit$priority","_taskToEdit$status","title","setTitle","description","setDescription","dueDate","setDueDate","Date","toISOString","split","priority","setPriority","status","setStatus","handleSubmit","e","_taskToEdit$id","preventDefault","updatedTask","id","crypto","randomUUID","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Oriana_Lutricuso/Desktop/to-do-list-app/frontend/src/components/TaskForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Task } from '../types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\ninterface TaskFormProps {\r\n  addTask: (task: Task) => Promise<void>;\r\n  onUpdate: (task: Task) => void;\r\n  taskToEdit?: Task | null;\r\n}\r\n\r\nconst TaskForm: React.FC<TaskFormProps> = ({ addTask, onUpdate, taskToEdit }) => {\r\n  const [title, setTitle] = useState(taskToEdit?.title ?? '');\r\n  const [description, setDescription] = useState(taskToEdit?.description ?? '');\r\n  const [dueDate, setDueDate] = useState(taskToEdit ? new Date(taskToEdit.dueDate).toISOString().split('T')[0] : '');\r\n  const [priority, setPriority] = useState(taskToEdit?.priority ?? 'medium');\r\n  const [status, setStatus] = useState(taskToEdit?.status ?? 'pending');\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    const updatedTask: Task = {\r\n      id: taskToEdit?.id ?? crypto.randomUUID(),\r\n      title,\r\n      description,\r\n      dueDate: new Date(dueDate),\r\n      priority: priority as 'low' | 'medium' | 'high',\r\n      status: status as 'pending' | 'completed',\r\n    };\r\n\r\n    if (taskToEdit) {\r\n      onUpdate(updatedTask);\r\n    } else {\r\n      await addTask(updatedTask);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>{taskToEdit ? 'Editar tarea' : 'Nueva tarea'}</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Título\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Descripción\"\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"date\"\r\n        value={dueDate}\r\n        onChange={(e) => setDueDate(e.target.value)}\r\n        required\r\n      />\r\n      <select value={priority} onChange={(e) => setPriority(e.target.value as 'low' | 'medium' | 'high')}>\r\n        <option value=\"low\">Baja</option>\r\n        <option value=\"medium\">Media</option>\r\n        <option value=\"high\">Alta</option>\r\n      </select>\r\n      <select value={status} onChange={(e) => setStatus(e.target.value as 'pending' | 'completed')}>\r\n        <option value=\"pending\">Pendiente</option>\r\n        <option value=\"completed\">Completada</option>\r\n      </select>\r\n      <button type=\"submit\">\r\n        {taskToEdit ? 'Guardar cambios' : 'Agregar tarea'}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUnD,MAAMC,QAAiC,GAAGA,CAAC;EAAEC,OAAO;EAAEC,QAAQ;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,iBAAA,EAAAC,qBAAA,EAAAC,oBAAA,EAAAC,kBAAA;EAC/E,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,EAAAQ,iBAAA,GAACF,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEM,KAAK,cAAAJ,iBAAA,cAAAA,iBAAA,GAAI,EAAE,CAAC;EAC3D,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,EAAAS,qBAAA,GAACH,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEQ,WAAW,cAAAL,qBAAA,cAAAA,qBAAA,GAAI,EAAE,CAAC;EAC7E,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAACM,UAAU,GAAG,IAAIY,IAAI,CAACZ,UAAU,CAACU,OAAO,CAAC,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;EAClH,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,EAAAU,oBAAA,GAACJ,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEe,QAAQ,cAAAX,oBAAA,cAAAA,oBAAA,GAAI,QAAQ,CAAC;EAC1E,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,EAAAW,kBAAA,GAACL,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEiB,MAAM,cAAAZ,kBAAA,cAAAA,kBAAA,GAAI,SAAS,CAAC;EAErE,MAAMc,YAAY,GAAG,MAAOC,CAAkB,IAAK;IAAA,IAAAC,cAAA;IACjDD,CAAC,CAACE,cAAc,CAAC,CAAC;IAElB,MAAMC,WAAiB,GAAG;MACxBC,EAAE,GAAAH,cAAA,GAAErB,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEwB,EAAE,cAAAH,cAAA,cAAAA,cAAA,GAAII,MAAM,CAACC,UAAU,CAAC,CAAC;MACzCpB,KAAK;MACLE,WAAW;MACXE,OAAO,EAAE,IAAIE,IAAI,CAACF,OAAO,CAAC;MAC1BK,QAAQ,EAAEA,QAAqC;MAC/CE,MAAM,EAAEA;IACV,CAAC;IAED,IAAIjB,UAAU,EAAE;MACdD,QAAQ,CAACwB,WAAW,CAAC;IACvB,CAAC,MAAM;MACL,MAAMzB,OAAO,CAACyB,WAAW,CAAC;IAC5B;EACF,CAAC;EAED,oBACE3B,OAAA;IAAM+B,QAAQ,EAAER,YAAa;IAAAS,QAAA,gBAC3BhC,OAAA;MAAAgC,QAAA,EAAK5B,UAAU,GAAG,cAAc,GAAG;IAAa;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtDpC,OAAA;MACEqC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,WAAQ;MACpBC,KAAK,EAAE7B,KAAM;MACb8B,QAAQ,EAAGhB,CAAC,IAAKb,QAAQ,CAACa,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;MAC1CG,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFpC,OAAA;MACEqC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,gBAAa;MACzBC,KAAK,EAAE3B,WAAY;MACnB4B,QAAQ,EAAGhB,CAAC,IAAKX,cAAc,CAACW,CAAC,CAACiB,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACFpC,OAAA;MACEqC,IAAI,EAAC,MAAM;MACXE,KAAK,EAAEzB,OAAQ;MACf0B,QAAQ,EAAGhB,CAAC,IAAKT,UAAU,CAACS,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;MAC5CG,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFpC,OAAA;MAAQuC,KAAK,EAAEpB,QAAS;MAACqB,QAAQ,EAAGhB,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACiB,MAAM,CAACF,KAAkC,CAAE;MAAAP,QAAA,gBACjGhC,OAAA;QAAQuC,KAAK,EAAC,KAAK;QAAAP,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjCpC,OAAA;QAAQuC,KAAK,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrCpC,OAAA;QAAQuC,KAAK,EAAC,MAAM;QAAAP,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACTpC,OAAA;MAAQuC,KAAK,EAAElB,MAAO;MAACmB,QAAQ,EAAGhB,CAAC,IAAKF,SAAS,CAACE,CAAC,CAACiB,MAAM,CAACF,KAAgC,CAAE;MAAAP,QAAA,gBAC3FhC,OAAA;QAAQuC,KAAK,EAAC,SAAS;QAAAP,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1CpC,OAAA;QAAQuC,KAAK,EAAC,WAAW;QAAAP,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eACTpC,OAAA;MAAQqC,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAClB5B,UAAU,GAAG,iBAAiB,GAAG;IAAe;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAAC/B,EAAA,CA9DIJ,QAAiC;AAAA0C,EAAA,GAAjC1C,QAAiC;AAgEvC,eAAeA,QAAQ;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}